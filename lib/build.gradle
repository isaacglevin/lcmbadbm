plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'org.testng:testng:7.1.0'
    implementation 'org.testng:testng:7.1.0'

    implementation group: 'com.slack.api', name: 'slack-api-client', version: '1.16.0'

    // Use JUnit Jupiter for testing.
    testImplementation platform('org.junit:junit-bom:5.12.0')
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    implementation 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:33.4.0-jre'

    // Charting api/runtime
    implementation group: 'org.jfree', name: 'jfreechart', version: '1.0.17'

    // persistence API
    implementation group: 'org.eclipse.persistence', name: 'eclipselink', version: '4.0.5'

    // DBMS
    implementation group: 'org.apache.derby', name: 'derby', version: '10.15.2.0'
    implementation group: 'org.apache.derby', name: 'derbyshared', version: '10.15.2.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

sourceSets  {
    // Make sure gradle (also) places resource files where IntelliJ wants them
    sourceSets.main.output.resourcesDir = sourceSets.main.output.classesDirs.asPath
    compileJava.dependsOn(processResources)
}

jar {
    manifest {
        attributes 'Main-Class': 'edu.touro.mco152.bm.App'
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveBaseName = 'badbm'
}

test {
    useJUnitPlatform()
}